# Generated by Django 2.1.4 on 2019-11-24 15:31

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('taskmanager', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FortAccesslog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_type', models.CharField(max_length=32)),
                ('content', models.TextField()),
                ('c_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'fort_accesslog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FortGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=128, unique=True)),
                ('memo', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fort_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FortGroupRemoteUserBindHost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'fort_group_remote_user_bind_host',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FortHost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host_name', models.CharField(max_length=128, unique=True)),
                ('ip', models.CharField(max_length=39)),
                ('port', models.SmallIntegerField()),
                ('release', models.CharField(max_length=128)),
                ('memo', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fort_host',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FortRemoteuser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remote_user_name', models.CharField(max_length=128)),
                ('password', models.CharField(max_length=512)),
            ],
            options={
                'db_table': 'fort_remoteuser',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FortRemoteuserbindhost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.IntegerField()),
            ],
            options={
                'db_table': 'fort_remoteuserbindhost',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FortUserprofile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(max_length=128)),
                ('enabled', models.IntegerField()),
            ],
            options={
                'db_table': 'fort_userprofile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FortUserprofileGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'fort_userprofile_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FortUserprofileRemoteUserBindHosts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'fort_userprofile_remote_user_bind_hosts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ncrmanager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taskid', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=50)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('subtime', models.DateField(blank=True, null=True)),
                ('closetime', models.DateField(blank=True, null=True)),
                ('subperson', models.CharField(blank=True, max_length=50, null=True)),
                ('disposeperson', models.CharField(blank=True, max_length=50, null=True)),
                ('solution', models.CharField(blank=True, max_length=50, null=True)),
                ('name', models.CharField(max_length=1000)),
                ('body', models.CharField(max_length=1000)),
                ('sonid', models.IntegerField()),
                ('version', models.CharField(blank=True, max_length=255, null=True)),
                ('testperson', models.CharField(blank=True, max_length=50, null=True)),
                ('level', models.CharField(max_length=50)),
                ('product', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'ncrmanager',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Taskdetail',
            fields=[
                ('rwh', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('wbs', models.CharField(blank=True, max_length=50, null=True)),
                ('begantime', models.DateField(blank=True, null=True)),
                ('endtime', models.DateField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('no', models.IntegerField()),
                ('canbegan', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'taskdetail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Testlist',
            fields=[
                ('testlist', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'testlist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('year', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'year',
                'managed': False,
            },
        ),
    ]
